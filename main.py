import cv2  # OpenCV for image processing...
import os  # OS module for file operations..
from ultralytics import YOLO  # YOLO model import..


def detect_helmet_and_bike(image_path, helmet_model, bike_model):  # Detect helmets and bikes in image..
    image = cv2.imread(image_path)  # Read image...
    if image is None:  # Check if image is loaded..
        print(f"Error: Could not read image {image_path}")  # Print error..
        return  # Exit function..

    bike_results = bike_model(image)  # Run bike detection first...
    bikes = []  # Store bike boxes...

    for result in bike_results:
        for box in result.boxes:
            x1, y1, x2, y2 = map(int, box.xyxy[0])
            conf = float(box.conf[0])
            label = result.names[int(box.cls[0])]

            bikes.append((x1, y1, x2, y2))  # Save bike coords...
            cv2.rectangle(image, (x1, y1), (x2, y2), (255, 0, 0), 2)  # Draw blue box for bike...
            cv2.putText(image, f'{label} ({conf:.2f})', (x1, y1 - 10),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 0, 0), 2)  # Label bike...

    helmet_results = helmet_model(image)  # Run helmet detection...
    for result in helmet_results:
        for box in result.boxes:
            x1, y1, x2, y2 = map(int, box.xyxy[0])
            conf = float(box.conf[0])
            label = result.names[int(box.cls[0])]

            for bx1, by1, bx2, by2 in bikes:  # Check if helmet inside any bike box...
                if bx1 < x1 < bx2 and by1 < y1 < by2:
                    cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 2)  # Green box for helmet...
                    cv2.putText(image, f'{label} ({conf:.2f})', (x1, y1 - 10),
                                cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)  # Label helmet...

    cv2.imshow("Helmet and Bike Detection", image)  # Show image..
    cv2.waitKey(0)  # Wait for key press...
    cv2.destroyAllWindows()  # Close windows..


def main():  # Main function..
    helmet_model_path = "models/yolo11_helmetdetection.pt"  # Helmet model path...
    bike_model_path = "models/yolo11_bikedetection.pt"  # Bike model path...
    image_folder = "data"  # Image folder..

    if not os.path.exists(helmet_model_path):  # Check helmet model file..
        print("Error: Helmet model file not found.")  # Print error...
        return  # Exit..

    if not os.path.exists(bike_model_path):  # Check bike model file..
        print("Error: Bike model file not found.")  # Print error...
        return  # Exit..

    helmet_model = YOLO(helmet_model_path)  # Load helmet YOLO model...
    bike_model = YOLO(bike_model_path)  # Load bike YOLO model...

    if not os.path.exists(image_folder):  # Check image folder..
        print("Error: Image folder not found.")  # Print error..
        return  # Exit...

    image_files = [f for f in os.listdir(image_folder) if f.endswith(('.jpg', '.png', '.jpeg'))]  # Get images..
    if not image_files:  # Check if images exist...
        print("Error: No images found in the folder.")  # Print error..
        return  # Exit...

    for image_file in image_files:  # Loop images..
        detect_helmet_and_bike(os.path.join(image_folder, image_file), helmet_model, bike_model)  # Process image...


if __name__ == "__main__":  # Entry point..
    main()  # Run main function...
